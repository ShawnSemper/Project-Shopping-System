/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import Business.Common.Order;
import Business.Enterprise.DeliveryCoEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CustomerOrganization;
import Business.Organization.Organization;
import Business.ShoppingSystem;
import Business.UserAccount.UserAccount;
import UserInterface.SellerRole.ProcessOrderJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PhoenixMay
 */
public class OrdersJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private CustomerOrganization customerOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private ShoppingSystem business;
    
    public OrdersJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, ShoppingSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.customerOrganization = (CustomerOrganization) organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        
        populateOrders();
    }
    
    public void populateOrders(){
        DefaultTableModel dtm = (DefaultTableModel) tblOrders.getModel();
        dtm.setRowCount(0);
        for(Order a : userAccount.getOrders()){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = a;
            row[1] = a.getProduct();
            row[2] = a.getQuantity();
            row[3] = a.getTotalPrice();
            row[4] = a.getStatus();
            dtm.addRow(row);
        }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnDetail = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Bangla MN", 0, 20)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("My Orders");
        jLabel2.setMinimumSize(new java.awt.Dimension(128, 42));

        btnBack.setBackground(new java.awt.Color(255, 255, 243));
        btnBack.setText("Back");
        btnBack.setPreferredSize(new java.awt.Dimension(79, 32));
        btnBack.setSize(new java.awt.Dimension(79, 32));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDetail.setBackground(new java.awt.Color(255, 255, 243));
        btnDetail.setText("Detail");
        btnDetail.setPreferredSize(new java.awt.Dimension(79, 32));
        btnDetail.setSize(new java.awt.Dimension(79, 32));
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Product", "Quantity", "Total Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrders.setRowHeight(24);
        jScrollPane1.setViewportView(tblOrders);

        btnCancel.setBackground(new java.awt.Color(254, 67, 101));
        btnCancel.setText("Cancel");
        btnCancel.setPreferredSize(new java.awt.Dimension(79, 32));
        btnCancel.setSize(new java.awt.Dimension(79, 32));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(120, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        loadPreviousPage();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblOrders.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to view", "Warning", JOptionPane.WARNING_MESSAGE);
        }else{
            Order order = (Order)tblOrders.getValueAt(selectedRow, 0);
            OrderDetailJPanel panel = new OrderDetailJPanel(this.userProcessContainer, order, userAccount, business);
            userProcessContainer.add("ProcessOrderJPanel", panel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnDetailActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to cancel", "Warning", JOptionPane.WARNING_MESSAGE);
        }else{
            Order target = (Order) tblOrders.getValueAt(selectedRow, 0);
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure to cancel the order?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                for (Network network : business.getNetworkList()) {
                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if(enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.DeliveryCo)){
                            DeliveryCoEnterprise deliveryCo = (DeliveryCoEnterprise) enterprise;
                            ArrayList<Order> deliveryOrders = deliveryCo.getDeliveryOrderList();
                            for (int i = deliveryOrders.size() - 1; i >= 0; i--) {
                                Order item = deliveryOrders.get(i);
                                if (target.equals(item)) {
                                    deliveryOrders.remove(item);
                                }
                            }
                        }
                        for (UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()) {
                            ArrayList<Order> orders = ua.getOrders();
                            for (int i = orders.size() - 1; i >= 0; i--) {
                                Order item = orders.get(i);
                                if (target.equals(item)) {
                                    orders.remove(item);
                                }
                            }
                        }
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                                ArrayList<Order> orders = ua.getOrders();
                                for (int i = orders.size() - 1; i >= 0; i--) {
                                    Order item = orders.get(i);
                                    if (target.equals(item)) {
                                        orders.remove(item);
                                    }
                                }
                            }
                        }
                    }
                }
                populateOrders();
            }
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void loadPreviousPage() {
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDetail;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
